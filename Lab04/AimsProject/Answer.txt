10. Unique item in a list
- Q: When overriding the equals() method of the Object class, you will have to cast the Object parameter obj to the type of Object that you are dealing with. 
For example, in the Media class, you must cast the Object obj to a Media, and then check the equality of the two objectsâ€™ attributes as the above requirements (i.e. title for Media; title and length for Track). 
If the passing object is not an instance of Media, what happens?

- A: When overriding the equals() method of the Object class, if the passing object (obj) is not an instance of the same class (in this case, Media), the equals() method will typically return false. This is because the comparison can only be performed between objects of the same type. In the Media class, the equals() method includes a check using the getClass() method to ensure that obj belongs to the same class as Media. If it doesn't, the check will fail and the method will return false.

11. Polymorphism with toString() method
- Q: Iterate through the list and print out the information of the media by using toString() method. 
Observe what happens and explain in detail.

- A: When called on a Media object, the appropriate toString() method of the respective class (e.g., Book, DVD, or CompactDisc) is invoked based on the actual type of the object. 

12. Sort media in the cart
- Q: What class should implement the Comparable interface?

- A: The Media class.

- Q: In those classes, how should you implement the compareTo() method be to reflect the ordering that we want?

- A:
public class Media implements Comparable<Media> {
    // Other attributes and methods
    
    @Override
    public int compareTo(Media other) {
        if (this.cost < other.cost) {
            return -1;
        } else if (this.cost > other.cost) {
            return 1;
        } else {
            return 0;
        }
    }
}

- Q: Can we have two ordering rules of the item (by title then cost and by cost then title) if we use this Comparable interface approach?

- A: No, we can't.

- Q: Suppose the DVDs has a different ordering rule from the other media types, that is by title, then decreasing length, then cost. How would you modify your code to allow this?

- A: Implement another compareTo() method in the DVD class.